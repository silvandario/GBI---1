#BlueJ class context
comment0.target=Produkt
comment0.text=\n\ Die\ Klasse\ Produkt\ wird\ von\ Standardtuer\ und\ Premiumtuer\ erweitert.\ Produkt\ ist\ also\ Superklasse\ von\ Standard-\ und\ Premiumt\u00FCr.\n\ Jedes\ Produkt\ hat\ einen\ Zustand,\ der\ den\ Status\ des\ Produkts\ beschreibt.\n\ \n\ @author\ Silvan\ Ladner\n\ @version\ 3.1\n
comment1.params=
comment1.target=Produkt()
comment1.text=\n\ Konstruktor\:\ Initialisiert\ Zustand\ und\ Produktionsablauf.\n
comment2.params=neuerZustand
comment2.target=void\ zustandAendern(int)
comment2.text=\n\ \u00C4ndert\ den\ Zustand\ des\ Produkts.\n\ \n\ @param\ neuerZustand\ Der\ neue\ Zustand\ des\ Produkts.\n
comment3.params=produktionsAblauf
comment3.target=void\ setzteProduktionsAblauf(java.util.LinkedList)
comment3.text=\n\ Legt\ die\ Reihenfolge\ der\ Roboter\ fest,\ die\ das\ Produkt\ bearbeiten.\n\ \n\ @param\ produktionsAblauf\ Die\ Liste\ der\ Roboter\ in\ Bearbeitungsreihenfolge.\n
comment4.params=
comment4.target=void\ naechsteProduktionsStation()
comment4.text=\n\ Leitet\ das\ Produkt\ zur\ n\u00E4chsten\ Produktionsstation\ weiter.\n
comment5.params=
comment5.target=int\ aktuellerZustand()
comment5.text=\n\ Gibt\ den\ aktuellen\ Zustand\ des\ Produkts\ zur\u00FCck.\n\ \n\ @return\ Aktueller\ Zustand\ des\ Produkts.\n
comment6.params=
comment6.target=boolean\ istFehlerhaft()
comment6.text=\n\ \u00DCberpr\u00FCft,\ ob\ das\ Produkt\ im\ Fehlerzustand\ ist.\n\ \n\ @return\ True,\ wenn\ das\ Produkt\ im\ Fehlerzustand\ ist,\ sonst\ false.\n
comment7.params=
comment7.target=int\ getProduktionszeit()
comment7.text=\n\ Abstrakte\ Methode\ zur\ R\u00FCckgabe\ der\ Produktionszeit.\n\ Diese\ Methode\ muss\ in\ den\ Subklassen\ implementiert\ werden.\n\ \n\ @return\ Produktionszeit\ des\ Produkts.\n
numComments=8
